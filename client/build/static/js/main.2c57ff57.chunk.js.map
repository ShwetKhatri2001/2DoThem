{"version":3,"sources":["utils/setAuthToken.js","utils/Validation.js","utils/ValidationAction.js","store/actions/auth.js","store/actions/actionTypes.js","store/actions/dashboard.js","store/reducers/auth.js","store/reducers/dashboard.js","store.js","utils/Fragment.js","components/Backdrop/Backdrop.js","containers/Navbar/NavbarInput/NavbarInput.js","containers/Navbar/Navbar.js","components/Dashboards/Dashboard/DashHeading.js","components/Dashboards/Lists/List.js","store/actions/lists.js","containers/Dashboard/Lists/Lists.js","containers/Dashboard/DashboardLists/DashboardLists.js","containers/Dashboard/Dashboard.js","components/Auth/Login/Login.js","components/Auth/Signin/Signin.js","components/Landing/Landing.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","validation","input","value","toUpperCase","email","test","password","updateObject","oldObject","newObject","Object","objectSpread","isEmpty","undefined","keys","length","trim","authSuccess","history","data","push","type","payload","mesg","setCurrentUser","decoded","logoutUser","localStorage","removeItem","getUser","dispatch","user","uaParse","UAParser","date","Date","moment","format","browser","getBrowser","device","getDevice","processor","getCPU","createLog","post","then","res","catch","err","setDashboard","dashboard","initialState","loading","isAuthenticated","authMessage","userData","authentication","state","arguments","action","authRegisterSuccess","authLoginSuccess","authUserLogout","dashboardCreate","rootReducer","combineReducers","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Fragment","props","children","Backdrop","react_default","a","createElement","utils_Fragment","className","NavbarInput","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","dashItem","setState","btnEnabled","defineProperty","target","name","onAdd","onClick","createDashboard","addBtnClick","bind","assertThisInitialized","_this2","addBtn","placeholder","Component","disabled","connect","dashName","console","log","response","Navbar","preventDefault","needAuthentication","Link","to","guestAuthenticated","Navbar_NavbarInput_NavbarInput","href","onLogout","DashHeading","onSubmitItem","id","editDashboard","dashHeadingSwitch","dashHeadingName","dashheading","dashHeadingTime","aria-haspopup","dashHeadingId","ownProps","dashId","put","List","dashBoardSwitch","editSwitch","deleteDashBoard","deleteList","listItem","submit","editList","changeStatus","updateList","list","classItems","status","key","join","listId","listDate","text","delete","Lists","lists","map","Lists_List","_id","DashboardLists","onSubmit","addDashboardList","deleteDashboard","dashboardList","listItems","Dashboard_Lists_Lists","aria-label","aria-hidden","Dashboard_DashHeading","Dashboard","authRedirect","Redirect","dashboards","dashboardItems","message","i","Dashboard_DashboardLists_DashboardLists","Login","validbtn","onLogin","updatedState","toBeUpdated","splice","every","val","onloading","newUser","loginUser","btnDisable","login","valid","btnEnable","setItem","decode","jwt_decode","actions","Signin","registerUser","signin","Landing","jwtToken","get","currentTime","now","exp","location","App","routes","Switch","Route","exact","path","component","Signup","BrowserRouter","components_Backdrop_Backdrop","containers_Navbar_Navbar","Boolean","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c57ff57.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst setAuthToken = token => {\n\n  if(token){\n    axios.defaults.headers.common['Authorization'] = token\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nexport default setAuthToken","\nimport * as action from './ValidationAction'\nimport moment from 'moment'\nimport UAParser from 'ua-parser-js'\n\nconst validateEmail = (email) => {\n   const emailPattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n  return email === '' ? null : emailPattern.test(email)\n}\n\nconst validatePassword = (password) => {\n  const passwordPattern = /(?!^[0-9]*$)(?!^[a-zA-Z]*$)^([a-zA-Z0-9]{6,25})$/;\n  return password === '' ? null : passwordPattern.test(password)\n}\n\n\nexport const validation = (input, value) => {  \n  switch(input.toUpperCase()){\n    case(action.EMAIL): return validateEmail(value);\n    case(action.PASSWORD): return validatePassword(value);\n    default: return null\n  }\n}\n\n\nexport const updateObject = (oldObject, newObject) => {\n  return {\n    ...oldObject,\n    ...newObject\n  }\n}\n\nexport const isEmpty = (value) => {\n  return value === undefined ||  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0);\n}\n\n\n// create log to the server\nexport const createLog = () => {\n  const uaParse = new UAParser()\n  const date = new Date()\n  const user = {\n    data: moment(date).format('LLL'),\n    browser: uaParse.getBrowser(),\n    device: uaParse.getDevice(),\n    processor: uaParse.getCPU(),\n  }\n  return user\n}","\n\nexport const EMAIL = 'EMAIL'\nexport const PASSWORD = 'PASSWORD'","\n\nimport * as actionType from  './actionTypes'\nimport setAuthToken from '../../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode'\nimport {createLog} from '../../utils/Validation'\nimport axios from 'axios'\n\nexport const registerUser = (userData, history) => dispatch =>{\n  axios.post('/api/users/register', userData)\n    .then(res => {\n      dispatch(authSuccess(history, res.data))\n    })\n    .catch(err=> {\n      dispatch({\n        type: actionType.AUTH_ERROR,\n        payload: err.response.data\n      })\n    })\n  }\n  \nexport const authSuccess = (history, data) => {\n  history.push('/login')\n  return {\n    type: actionType.AUTH_REGISTER_SUCCESS,\n    payload: {\n      mesg: data.mesg,\n      type: data.type\n    }\n  }\n}\n\nexport const onloading = () => {\n  return {\n    type: actionType.LOADING\n  }\n}\n\nexport const loginUser = (userData, history) => dispatch => {\n  axios.post('/api/users/login', userData)\n    .then(res => {\n      // set response data to a token\n      const {token} = res.data;\n      // save token to localstorage\n      localStorage.setItem('jwtToken', token)\n      // set token in the request header\n      setAuthToken(token)\n      // decode the token to extract user id\n      const decode = jwt_decode(token)\n      // dispatch to create save the token in the state\n      // console.log(decode)\n      dispatch(setCurrentUser(decode))\n    })\n    .catch(err => {\n      dispatch({\n        type: actionType.AUTH_ERROR,\n        payload: err.response.data\n      })\n    })\n  return {\n    type: actionType.LOADING\n  }\n}\n\nexport const setCurrentUser = (decoded)=> {\n  return {\n    type: actionType.AUTH_SET_CURRENT_USER,\n    payload: decoded\n  }\n}\n\n\n\nexport const logoutUser = () => {\n  localStorage.removeItem('jwtToken')\n  return {\n    type: actionType.AUTH_USER_LOGOUT\n  }\n}\n\nexport const getUser = () => dispatch =>{\n  const user = createLog()\n  axios.post('/api/users/getUser', {user: user})\n    .then(res => {\n      dispatch({\n        type: actionType.USER_DATA\n      })\n    })\n    .catch(err=> {\n      dispatch({\n        type: actionType.USER_DATA\n      })\n    })\n}","\n\nexport const LOADING = 'LOADING';\n\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const AUTH_REGISTER_SUCCESS = 'AUTH_REGISTER_SUCCESS';\nexport const AUTH_LOGIN = 'AUTH_LOGIN';\nexport const AUTH_SET_CURRENT_USER = 'AUTH_SET_CURRENT_USER';\nexport const AUTH_USER_LOGOUT = 'AUTH_USER_LOGOUT';\n\nexport const DASHBOARD_CREATE = 'DASHBOARD_CREATE';\nexport const DASHBOARD_EDIT = 'DASHBOARD_EDIT';\nexport const DASHBOARD_DELETE = 'DASHBOARD_DELETE';\nexport const USER_DATA = 'USER_DATA'\n","\n\nimport axios from 'axios'\nimport * as actionType from './actionTypes'\n\nexport const fetchDashboard = () => dispatch => {\n  axios.get('/api/dashboard/')\n    .then(res => {\n      dispatch(setDashboard(res.data))\n    })\n    .catch(err => {\n      console.log(err.response)\n    })\n}\n\n\n\nexport const createDashboard = (userData) => dispatch => {\n  axios.post('/api/dashboard/create', userData)\n    .then(res => {\n      dispatch(setDashboard(res.data))\n    })\n    .catch(err => {\n      console.log(err.response)\n    })\n}\n\n\nexport const setDashboard = (data) => {\n  return {\n    type: actionType.DASHBOARD_CREATE,\n    payload: {\n      dashboard: data.dashboard,\n      mesg: data.mesg\n    }\n  }\n}\n\nexport const editDashboard = (dashId, dashName) => dispatch => {\n  axios.put('/api/dashboard/update/'+ dashId, {name: dashName})\n    .then(res =>{\n      dispatch(setDashboard(res.data))\n    })  \n    .catch(err => {\n      console.log(err.response)\n    })\n}\n\nexport const deleteDashboard = (dashId) => dispatch => {\n  axios.delete('/api/dashboard/delete/'+ dashId)\n    .then(res =>{\n        dispatch(setDashboard(res.data))\n    })  \n    .catch(err => {\n      console.log(err.response)\n    })\n}\n\n\nexport const onLoadApp = () =>{\n  \n}","\nimport * as actionType from '../actions/actionTypes'\nimport {updateObject, isEmpty} from '../../utils/Validation'\n\nconst initialState = {\n  loading: false,\n  isAuthenticated: false,\n  authMessage: {},\n  userData: false,\n  user: {}\n}\n\n\nconst getErrors = (state, data) => {\n  return updateObject( state, {\n    authMessage: {\n      mesg: data.mesg,\n      type: data.type\n    },\n    loading: false\n  })\n}\n\nconst authRegisterSuccess = (state, data) =>{\n  return updateObject( state, {\n    authMessage: {\n      mesg: data.mesg, \n      type: data.type},\n    loading: false\n  })\n}\n\n\nconst loading = (state) => {\n  return updateObject( state, {\n    loading: true\n  })\n}\n\n\nconst authLoginSuccess = (state, userData) => {\n  return updateObject(state, {\n    isAuthenticated: !isEmpty(userData),\n    user: userData\n  })\n}\n\nconst authUserLogout = (state, action) => {\n  return updateObject(state, {\n    isAuthenticated: false,\n    user: {}\n  })\n}\n\nconst userData = (state) => {\n  return updateObject(state, {\n    userData: true\n  })\n}\n\nconst authentication = (state = initialState, action) => {\n  switch(action.type){\n    case (actionType.LOADING): return loading(state);\n    case (actionType.USER_DATA): return userData(state);\n    case (actionType.AUTH_ERROR): return getErrors(state, action.payload);\n    case (actionType.AUTH_REGISTER_SUCCESS): return authRegisterSuccess(state, action.payload);\n    case (actionType.AUTH_SET_CURRENT_USER): return authLoginSuccess(state, action.payload);\n    case (actionType.AUTH_USER_LOGOUT): return authUserLogout(state, action)\n  default: return state\n  }\n}\n\nexport default authentication","\nimport * as actionType from '../actions/actionTypes'\nimport {updateObject} from '../../utils/Validation'\n\nconst initialState = {\n  dashboard: {}\n}\n\n\n\nconst dashboardCreate = (state, payload) => {\n  return updateObject(state, {\n    ...payload\n  })\n}\n\n\n\n\n\nconst authentication = (state = initialState, action) => {\n  switch (action.type) {\n  \n    case (actionType.DASHBOARD_CREATE): return dashboardCreate(state, action.payload);\n    \n    default:\n      return state\n  }\n}\n\nexport default authentication","\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk'\n\n\nimport auth from './store/reducers/auth'\nimport dashboard from './store/reducers/dashboard'\n\nconst rootReducer = combineReducers({\n  auth, dashboard\n})\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nexport default store\n","\nconst Fragment = (props) => {\n  return props.children\n}\n\nexport default Fragment","import React from 'react'\nimport Fragment from '../../utils/Fragment'\nimport './Backdrop.css'\n\nconst Backdrop = () => {\n\n  return (\n    <Fragment>\n      <div className=\"Backdrop\"></div>\n    </Fragment>\n  )\n}\n\nexport default Backdrop","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport * as action from '../../../store/actions/index'\nimport Fragment from '../../../utils/Fragment'\n\nclass NavbarInput extends Component {\n\n  constructor(){\n    super();\n    this.state ={\n      addBtnClick: false,\n      dashItem: '',\n      btnEnabled: true\n    }\n    this.onClick = this.onClick.bind(this)\n    this.onChange = this.onChange.bind(this);\n    this.onAdd = this.onAdd.bind(this);\n\n  }\n\n  onChange = (e) => {\n    if(this.state.dashItem.length > 1){\n      this.setState({btnEnabled: false})  \n    }\n    this.setState({[e.target.name]: e.target.value})\n  }\n  \n  onAdd = () => {\n    this.onClick()\n    this.props.createDashboard({ name: this.state.dashItem })\n  }\n  \n  onClick = () => {\n    this.setState({addBtnClick: !this.state.addBtnClick})\n  }\n  \n  render() {\n    \n    let addBtn = <li className=\"nav-item\">\n                    <div className=\"form-inline my-2 my-lg-0\">\n                    <button \n                      onClick={this.onClick}\n                      className=\"btn btn-outline-dark add\">\n                    <i className=\"fas fa-plus fa-sm\"></i> Add</button> \n                    </div>\n                  </li>\n\nif(this.state.addBtnClick){\n  addBtn = <li className=\"nav-item\">\n                <div className=\"form-inline my-2 my-lg-0 addBtn\">\n                <input \n                  className=\"form-control mr-sm-2\" \n                  name='dashItem'\n                  placeholder=\"Enter dashboard name\" \n                  value={this.state.Component}\n                  onChange={(e)=>this.onChange(e)} />\n                <button \n                  disabled={this.state.btnEnabled}\n                  className=\"btn-sm btn-outline-dark add\"\n                  onClick={this.onAdd}>\n                  <i className=\"fas fa-plus fa-sm\"></i> Add</button>\n                </div>\n              </li>\n    }\n\n    return (\n      <Fragment>\n        {addBtn}\n      </Fragment>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createDashboard: (dashName) => {dispatch(action.createDashboard(dashName))\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(NavbarInput)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport * as action from '../../store/actions/index'\n\nimport Fragment from '../../utils/Fragment'\nimport NavBtn from './NavbarInput/NavbarInput'\nimport './Navbar.css'\n\nclass Navbar extends Component {\n  onLogout(e) {\n    e.preventDefault();\n    this.props.logoutUser()\n  }\n\n  render(){\n\n    const needAuthentication = \n      <Fragment>\n        <li className=\"nav-item\">\n          <Link \n            className=\"nav-link\" \n            to='/signin'>\n            <i className=\"fas fa-user-edit fa-sm\"></i> Sign Up</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link\n            className=\"nav-link\"\n            to='/login'>\n            <i className=\"fas fa-sign-in-alt fa-sm\"></i> Login</Link>\n        </li>\n      </Fragment>\n    \n    const guestAuthenticated = \n      <Fragment>\n      <NavBtn />\n      <li className=\"nav-item\">\n          <Link\n            className=\"nav-link\"\n            to='/dashboard'>\n            <i className=\"far fa-list-alt fa-sm\"></i> Dashboard</Link>\n        </li>\n      <li className=\"nav-item\">\n        <a \n          href=\"/\"\n          onClick={(e)=>this.onLogout(e)}\n          className=\"nav-link\">\n        <i className=\"fas fa-user fa-sm\"></i> Logout</a>\n      </li>\n      </Fragment>\n\n    return (\n      <Fragment>\n      <div className=\"NavHeader\">\n          <div className=\"container\">\n            <div className=\"Header\">\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light NavBk\">\n              <div className=\"container-fluid\">\n                <div className=\"navbar-header\">\n                  <Link \n                    className=\"navbar-brand\" \n                    to='/'>2DoThem</Link>\n                </div>\n                <ul className=\"nav navbar-nav navbar-right\">\n                  {this.props.isAuthenticated? guestAuthenticated : needAuthentication}\n                </ul>\n              </div>\n            </nav>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )}\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logoutUser: () => {dispatch(action.logoutUser())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport * as action from '../../../store/actions/index'\nimport moment from 'moment'\nimport Fragment from '../../../utils/Fragment'\n\nclass DashHeading extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      dashHeadingSwitch: true,\n      dashName: ''\n    }\n    this.onClick = this.onClick.bind(this)\n    this.onSubmitItem = this.onSubmitItem.bind(this)\n    this.onChange = this.onChange.bind(this)\n  }\n\n  componentDidMount(){\n    this.setState({dashName: this.props.dashHeadingName})\n  }\n\n  onChange=(e)=>{\n    this.setState({dashName: e.target.value})\n  }\n  onSubmitItem = (id) => {\n    this.props.editDashboard(id, this.state.dashName)\n    this.onClick()\n  }\n  onClick=()=>{\n    this.setState({dashHeadingSwitch: !this.state.dashHeadingSwitch})\n  }\n\nrender(){\n\n  let dashheading = null\n\n  if(this.state.dashHeadingSwitch){\n    dashheading = \n    <Fragment>\n      <h5 className=\"card-title\"\n        onClick={this.onClick}>\n        {this.props.dashHeadingName}</h5>\n        <span className=\"card-text date\">\n          {moment(this.dashHeadingTime).format('dddd')}, {' '}\n          {moment(this.dashHeadingTime).format('Do')} {' '}\n        <i>{moment(this.dashHeadingTime).format('MMMM')}</i></span>\n    </Fragment>\n  } else {\n    dashheading =\n      <div className=\"input-group DashInput\">\n        <input \n          type=\"text\" \n          name='dashname'\n          className=\"form-control\" \n          value={this.state.dashName}\n          onChange={(e)=>this.onChange(e)}/>\n        <div className=\"input-group-append\">\n          <button \n            className=\"btn btn-outline-secondary\" \n            type=\"button\" \n            aria-haspopup=\"true\"\n            onClick={()=>this.onSubmitItem(this.props.dashHeadingId)}>\n            <i className=\"fas fa-edit fa-xs\"></i>\n          </button>\n      </div>\n    </div>\n  }\n\n  return (\n    <Fragment>  \n      {dashheading}\n    </Fragment>\n  )}\n}\n\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    editDashboard: (id, name)=>{dispatch(action.editDashboard(id, name))}\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(DashHeading);","import React, { Component } from 'react'\nimport moment from 'moment'\nimport * as action from '../../../store/actions/index'\nimport {connect} from 'react-redux'\nimport Fragment from '../../../utils/Fragment'\n\nclass List extends Component {\n\n  constructor(){\n    super();\n    this.state={\n      editSwitch: false,\n      listItem: ''\n    }\n    this.dashBoardSwitch = this.dashBoardSwitch.bind(this)\n    this.deleteDashBoard = this.deleteDashBoard.bind(this)\n    this.submit = this.submit.bind(this)\n    this.onChange = this.onChange.bind(this)\n    this.changeStatus = this.changeStatus.bind(this)\n  }\n\n  componentDidMount(){\n    this.setState({listItem: this.props.list})\n  }\n\n  dashBoardSwitch=()=>{\n    this.setState({editSwitch: !this.state.editSwitch})\n  }\n\n  deleteDashBoard=(dashId, id)=>{ \n    this.props.deleteList(dashId, id)\n  }\n\n  onChange=(e)=>{\n    this.setState({listItem: e.target.value})\n  }\n\n  submit=(dashId, id)=>{\n    this.props.editList(dashId, id, this.state.listItem)\n    this.dashBoardSwitch()\n  }\n\n  changeStatus=(dashId, id)=>{\n    this.props.updateList(dashId, id)\n  }\n\n  render() {\nlet classItems = ['mb-1']\nif(this.props.status === 'done'){\n  classItems.push('done')\n}\n\n    let list = \n        <li \n          key={classItems.join(' ')}\n          className=\"list-group-item list-group-item-action flex-column align-items-start\">\n            <p \n              className={classItems}\n              onClick={()=>this.changeStatus(this.props.dashId, this.props.listId)}\n              // onClick={this.dashBoardSwitch}\n              >{this.props.list}</p>\n            <div className=\"d-flex justify-content-start Icons\">\n              <small>{moment(this.props.listDate).format('LT')}</small>\n              <i \n              className=\"fas fa-trash-alt fa-xs\"\n              onClick={()=>this.deleteDashBoard(this.props.dashId, this.props.listId)}></i>\n            </div>\n          </li>\n\n    if(this.state.editSwitch){\n      list = <div className=\"input-group DashInput\">\n                <input \n                  type=\"text\" \n                  className=\"form-control\" \n                  value={this.state.listItem}\n                  onChange={(e)=>this.onChange(e)}\n                  />\n                <div className=\"input-group-append\">\n                  <button \n                    className=\"btn btn-outline-secondary\"\n                    type=\"button\"\n                    aria-haspopup=\"true\"\n                    onClick={()=>this.submit(this.props.dashId, this.props.listId)}>\n                    <i className=\"fas fa-plus fa-xs\"></i>\n                  </button>\n                </div>\n              </div>\n    }\n\n    return (\n      <Fragment>\n        {list}\n      </Fragment>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    editList: (dashId, id, text)=>{dispatch(action.editList(dashId, id, text))},\n    deleteList: (dashId, id)=>{dispatch(action.deleteList(dashId, id))},\n    updateList: (dashId, id)=>{dispatch(action.updateListStatus(dashId, id))}\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(List)","\nimport {setDashboard} from './dashboard'\nimport axios from  'axios'\n\nexport const addList = (dashId, list) => dispatch => {\n  axios.post('/api/lists/create', {dashId, list})\n    .then(res => {\n      dispatch(setDashboard(res.data))\n    })\n    .catch(err => {\n      console.log(err.response)\n    })\n}\n\n\nexport const editList = (dashId, id,  text) => dispatch => {\n  axios.put('/api/lists/update/'+dashId, {\n    dashId: id,\n    text: text\n  })\n    .then(res => {\n      dispatch(setDashboard(res.data))\n    })\n    .catch(err => {\n      console.log(err.response)\n    })\n}\n\n\n\nexport const updateListStatus = (id, listId) => dispatch => {\n  axios.put('/api/lists/updateStatus/'+id, {listId} )\n  .then(res => {\n    dispatch(setDashboard(res.data))\n  })\n  .catch(err => {\n    console.log(err.response)\n  })\n}\n\n\nexport const deleteList = (id, listId) => dispatch => {\n  axios.delete('/api/lists/delete/'+id+'/'+listId )\n    .then(res => {\n      dispatch(setDashboard(res.data))\n    })\n    .catch(err => {\n      console.log(err.response)\n    })\n}","\nimport React, { Component } from 'react'\nimport Fragment from '../../../utils/Fragment'\nimport List from '../../../components/Dashboards/Lists/List'\nimport {isEmpty} from '../../../utils/Validation'\n\n\nclass Lists extends Component {\n\n\nrender() {\n\n  let lists = <h1 className=\"display-4 None\">No lists.</h1>\n\n  if(!isEmpty(this.props.lists)){\n    lists = this.props.lists.map(list => {\n      return <List \n              dashId={this.props.dashId}\n              key={list._id}\n              status={list.status}\n              list={list.list}\n              listId={list._id}\n              listDate={list.date}/>\n    })\n  }\n\n  return (\n    <Fragment>\n      <ul className=\"list-group ListGroup\">\n        {lists}\n      </ul>\n    </Fragment>\n  )}\n}\n\nexport default Lists","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport * as action from '../../../store/actions/index'\nimport Fragment from '../../../utils/Fragment'\nimport DashHeading from '../../../components/Dashboards/Dashboard/DashHeading'\nimport ListItems from '../Lists/Lists'\n\nclass DashboardLists extends Component {\n\n  constructor(){\n    super()\n      this.state = {\n        listItem: ''\n      }\n    \n    this.onClick = this.onClick.bind(this)\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\nonChange=(e)=>{\n  this.setState({listItem: e.target.value})\n}\n\nonSubmit=(id)=>{\n  this.props.addDashboardList(id, this.state.listItem)\n  this.setState({listItem: ''})\n}\n\nonClick =(id) => {\n  this.props.deleteDashboard(id)\n}\n\n  render() {\n    let dashboardList = this.props.dashItem\n\n    let listItems = <ListItems \n                      dashId={dashboardList._id}\n                      lists={dashboardList.lists}/>\n    let dashboard = \n        <div className=\"col-sm-4 Col\">\n        <div className=\"card List\">\n          <div className=\"card-body\">\n            <button \n              className=\"close\" \n              aria-label=\"Close\"\n              onClick={()=>this.onClick(dashboardList._id)}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n            <div className=\"DashHeader\">\n              <DashHeading \n                dashHeadingId={dashboardList._id}\n                dashHeadingTime={dashboardList.date}\n                dashHeadingName={dashboardList.name}/>\n            </div>\n            <div className=\"ListSum\">\n              <h5 className=\"card-title\">{dashboardList.lists.length}</h5>\n              <span className=\"card-text\">\n              {dashboardList.lists.length <= 1 ? 'List' : 'Lists'}\n              </span>\n            </div>\n            <div className=\"input-group DashInput\">\n              <input \n                type=\"text\" \n                name='listitem'\n                className=\"form-control\"\n                placeholder='Enter todos'\n                value={this.state.listItem}\n                onChange={(e)=>this.onChange(e)}/>\n              <div className=\"input-group-append\">\n                <button \n                  className=\"btn btn-outline-secondary\" \n                  type=\"button\" \n                  onClick={()=>this.onSubmit(dashboardList._id)}>\n                <i className=\"fas fa-plus fa-xs\"></i>\n                </button>\n              </div>\n            </div>\n              {listItems}\n          </div>\n        </div>\n      </div>\n    return (\n      <Fragment>\n        {dashboard}\n      </Fragment>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    deleteDashboard: (id)=>{dispatch(action.deleteDashboard(id))},\n    addDashboardList: (id, text)=>{dispatch(action.addList(id, text))}\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(DashboardLists);","import React, {Component} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {isEmpty} from '../../utils/Validation'\nimport DashboardList from './DashboardLists/DashboardLists'\nimport Fragment from '../../utils/Fragment'\nimport './Dashboard.css'\n\nclass Dashboard extends Component {\n\n\n  render() {\n  let authRedirect = null\n  if(!this.props.isAuthenticated){\n    authRedirect = <Redirect to='/' />\n  }\n\n  let dashboard = this.props.dashboards\n  let dashboardItems = null\n  if(isEmpty(dashboard.dashboard)){\n    dashboardItems = \n    <Fragment>\n      <div className=\"col-sm-6 offset-sm-3\">\n        <div className=\"card Empty\">\n        <h5 className=\"card-header\">\n          {dashboard.mesg ? dashboard.mesg.message : ''}\n        </h5>\n        </div>\n      </div>\n      <div className=\"col-sm-3\"></div>\n    </Fragment>\n\n  } else {\n   dashboardItems = dashboard.dashboard.map((dashItem,i )=> {\n      return <DashboardList \n              key={dashItem._id}\n              dashItem={dashItem}/>\n    })\n  }\n  return (\n    <div className=\"add row\">\n      {authRedirect}\n      {dashboardItems}\n      </div>\n  )}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    dashboards: state.dashboard,\n    isAuthenticated: state.auth.isAuthenticated\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Fragment from '../../../utils/Fragment'\nimport {validation} from '../../../utils/Validation'\nimport * as actions from '../../../store/actions/index'\nimport './Login.css'\n\nclass Login extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      email: {\n        value: '',\n        validbtn: null\n      },\n      password: {\n        value: '',\n        validbtn: null\n      }\n    }\n    this.onChange = this.onChange.bind(this);\n    this.onLogin = this.onLogin.bind(this);\n  }\n\n   onChange(e, input){\n    const updatedState = this.state\n    const toBeUpdated = updatedState[input]\n    toBeUpdated.value = e.target.value\n    toBeUpdated.validbtn = validation(input, toBeUpdated.value)\n    this.setState({[this.state]: updatedState})\n  }\n\n  btnEnable(value) {\n    const checkifTrue = (val) => val === true\n    const valuet = value.splice(0, 2)\n    return !valuet.every(checkifTrue)\n  }\n\n  onLogin(e){\n    e.preventDefault(); \n    this.props.onloading()\n    const newUser = {\n      email: this.state.email.value,\n      password: this.state.password.value\n    }\n    this.props.loginUser(newUser, this.props.history)\n  }\n  \n  \n  \n  render() {\n    \n  let authRedirect = null\n  if(this.props.isAuthenticated){\n    this.props.history.push('/dashboard')\n  }\n\n  let btnDisable = []\n    for(let i in this.state){ btnDisable.push(this.state[i].validbtn) }\nlet login=<div className=\"row\"> \n            <div className=\"col-sm-4 offset-sm-4 Login\">\n              <form onSubmit={(e)=>this.onLogin(e)}>\n                <div className=\"form-group\">\n                  <h5>Login\n                    <small className={'form-text text-'+this.props.type}>\n                      {this.props.mesg ? this.props.mesg : ''}\n                    </small>\n                  </h5>\n                  <input \n                    type=\"email\" \n                    name=\"email\"\n                    className=\"form-control\" \n                    placeholder=\"Enter email\"\n                    value={this.state.email.value}\n                    onChange={(e)=>this.onChange(e, 'email')} />\n                  <small className=\"form-text text-muted\">\n                    {this.state.email.valid === false ? 'Please enter a valid email' : null}\n                  </small>\n                </div>\n                <div className=\"form-group\">\n                  <input \n                    type=\"password\" \n                    name=\"password\"\n                    className=\"form-control\" \n                    placeholder=\"Password\"\n                    value={this.state.password.value}\n                    onChange={(e)=>this.onChange(e, 'password')} />\n                  <small className=\"form-text text-muted\">\n                    {this.state.password.valid === false ? 'Password must be alphanumeric and atleast 6 characters!' : null}\n                    </small>\n                </div>\n                <div className=\"col text-center\">\n                  <button \n                    disabled={this.btnEnable(btnDisable)}\n                    type=\"submit\" \n                    className=\"btn btn-primary\">Submit</button>\n                </div>\n              </form>\n            </div>\n              <div className=\"col-sm-4\"></div>\n          </div>  \n\n    return (\n      <Fragment>\n        {authRedirect}\n        {login}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    mesg: state.auth.authMessage.mesg,\n    type: state.auth.authMessage.type,\n    loading: state.auth.loading,\n    user: state.auth.user,\n    isAuthenticated: state.auth.isAuthenticated\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    loginUser: (userData, history) => { dispatch(actions.loginUser(userData, history)) },\n    onloading: () => {\n      dispatch(actions.onloading())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Fragment from '../../../utils/Fragment'\nimport {validation} from '../../../utils/Validation'\nimport * as actions from '../../../store/actions/index'\nimport './Signin.css'\n\nclass Signin extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      email: {\n        value: '',\n        valid: null\n      },\n      password: {\n        value: '',\n        valid: null\n      }\n    }\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e, input){\n    const updatedState = this.state\n    const toBeUpdated = updatedState[input]\n    toBeUpdated.value = e.target.value\n    toBeUpdated.valid = validation(input, toBeUpdated.value)\n    this.setState({[this.state]: updatedState})\n  }\n\n  btnEnable(value){\n    const checkifTrue = (val) => val === true \n    const valuet = value.splice(0,2)\n      return !valuet.every(checkifTrue)\n  }\n\n  onSubmit(e){\n    e.preventDefault(); \n    this.props.onloading()\n    const newUser = {\n      email: this.state.email.value,\n      password: this.state.password.value\n    }\n    this.props.registerUser(newUser, this.props.history)\n  }\n\n  render() {\n\n  let authRedirect = null\n  if(this.props.isAuthenticated){\n    this.props.history.push('/dashboard')\n  }\n    let btnDisable = []\n    for(let i in this.state){\n      btnDisable.push(this.state[i].valid)\n    }\n\nlet signin = <div className=\"row\"> \n              <div className=\"col-sm-4 offset-sm-4 Signup\">\n                <form onSubmit={(e)=>this.onSubmit(e)}>\n                  <div className=\"form-group\">\n                    <h5>Signup\n                      <small className=\"form-text text-muted\">\n                        {this.props.mesg ? this.props.mesg : ''}\n                      </small>\n                    </h5>\n                    <input \n                      type=\"email\" \n                      name=\"email\"\n                      className=\"form-control\" \n                      placeholder=\"Enter email\"\n                      value={this.state.email.value}\n                      onChange={(e)=>this.onChange(e, 'email')} />\n                    <small className=\"form-text text-muted\">\n                      {this.state.email.valid === false ? 'Please enter a valid email' : null}\n                    </small>\n                  </div>\n                  <div className=\"form-group\">\n                    <input \n                      type=\"password\" \n                      name=\"password\"\n                      className=\"form-control\" \n                      placeholder=\"Password\"\n                      value={this.state.password.value}\n                      onChange={(e)=>this.onChange(e, 'password')} />\n                    <small className=\"form-text text-muted\">\n                      {this.state.password.valid === false ? 'Password must be alphanumeric and atleast 6 characters!' : null}\n                      </small>\n                  </div>\n                  <div className=\"col text-center\">\n                    <button \n                      disabled={this.btnEnable(btnDisable)}\n                      type=\"submit\" \n                      className=\"btn btn-primary\">Submit</button>\n                  </div>\n                </form>\n              </div>\n              <div className=\"col-sm-4\"></div>\n            </div>    \n    \n    return (\n      <Fragment>\n        {authRedirect}\n        {signin}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    mesg: state.auth.authMessage.mesg,\n    type: state.auth.authMessage.type,\n    loading: state.auth.loading,\n    isAuthenticated: state.auth.isAuthenticated\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    registerUser: (userData, history) => { \n      dispatch(actions.registerUser(userData, history))\n    },\n    onloading: () => {\n      dispatch(actions.onloading())\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport Fragment from '../../utils/Fragment';\nimport './Landiing.css'\n\nconst Landing = () => {\n\n  return (\n    <Fragment>\n      <div className='container'>\n        <div className=\"jumbotron\">\n          <h1 className=\"display-4\">Welcome to my 2DoThem!</h1>\n          <hr className=\"my-4\" />\n          <p>This app is public and you can personally use this app for your daily activities. This app works on desktop and also on tablet and mobile. Thank you for using my app and I hope you enjoy using it.</p>\n          <p className=\"lead leadBtn\">\n            <Link \n            to='/signin'\n            className=\"btn btn-primary\" >Sign Up</Link>\n            <Link \n            to='/login'\n            className=\"btn btn-primary pull-right\" >Login</Link>\n          </p>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\nexport default Landing","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport setAuthToken from './utils/setAuthToken'\nimport jwt_decode from 'jwt-decode'\nimport {logoutUser, setCurrentUser, fetchDashboard} from './store/actions/index'\nimport store from './store'\nimport Backdrop from './components/Backdrop/Backdrop'\nimport Fragment from  './utils/Fragment'\nimport Navbar from './containers/Navbar/Navbar'\nimport Dashboard from './containers/Dashboard/Dashboard'\nimport Login from './components/Auth/Login/Login'\nimport Signup from './components/Auth/Signin/Signin'\nimport Landing from './components/Landing/Landing'\nimport './App.css';\nimport * as action from './store/actions/index'\n\nif(localStorage.jwtToken){\n  setAuthToken(localStorage.jwtToken);\n  \n  const decoded = jwt_decode(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(decoded))\n  store.dispatch(fetchDashboard())\n\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login';\n  }\n}\n\n\nclass App extends Component {\n\n  componentDidMount(){\n    this.props.user()\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route exact path='/signin' component={Signup} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/' component={Landing} />\n        <Route exact path='/dashboard' component={Dashboard} />\n      </Switch>\n    )\n    if(this.props.isAuthenticated){\n      routes = (\n        <Switch>\n          <Route exact path='/' component={Landing} />\n          <Route exact path='/dashboard' component={Dashboard} />\n          <Redirect to='/' />\n        </Switch>\n      )\n    }\n\n    return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Backdrop />\n        <Fragment className=\"Content\">\n        <Navbar />\n          <div className=\"container\">\n            {routes}\n          </div>\n        </Fragment>\n      </div>\n    </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.isAuthenticated\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    user: () => { dispatch(action.getUser()) }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from 'react-redux'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './store'\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\ndocument.getElementById('root'));\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}